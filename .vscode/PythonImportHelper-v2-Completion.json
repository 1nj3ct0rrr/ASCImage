[
    {
        "label": "cv2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cv2",
        "description": "cv2",
        "detail": "cv2",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "colorama",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "colorama",
        "description": "colorama",
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "Fore",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "Back",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "Style",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "Fore",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "Back",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "Style",
        "importPath": "colorama",
        "description": "colorama",
        "isExtraImport": true,
        "detail": "colorama",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageFont",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageDraw",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageOps",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "Banner",
        "kind": 2,
        "importPath": "Image2Image",
        "description": "Image2Image",
        "peekOfCode": "def Banner():\n    print(\n        f'{Fore.YELLOW}  _______  _______  _______  ___   __   __  _______  _______  _______  {Fore.RED}       {Fore.BLUE}    ___   __   __  _______  _______  _______  _______  ___   __   __  _______  _______  _______ '\n    )\n    print(\n        f'{Fore.YELLOW} |   _   ||       ||       ||   | |  |_|  ||   _   ||       ||       | {Fore.RED}       {Fore.BLUE}   |   | |  |_|  ||   _   ||       ||       ||       ||   | |  |_|  ||   _   ||       ||       |'\n    )\n    print(\n        f'{Fore.YELLOW} |  |_|  ||  _____||       ||   | |       ||  |_|  ||    ___||    ___| {Fore.RED}  ____ {Fore.BLUE}   |   | |       ||  |_|  ||    ___||    ___||____   ||   | |       ||  |_|  ||    ___||    ___|'\n    )",
        "detail": "Image2Image",
        "documentation": {}
    },
    {
        "label": "GetArgs",
        "kind": 2,
        "importPath": "Image2Image",
        "description": "Image2Image",
        "peekOfCode": "def GetArgs():\n    Banner()\n    parser = argparse.ArgumentParser('ASCImage')\n    parser.add_argument('--input',\n                        type=str,\n                        default='Data/Input.jpg',\n                        help='Path to input image')\n    parser.add_argument('--output',\n                        type=str,\n                        default='Data/Output.jpg',",
        "detail": "Image2Image",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "Image2Image",
        "description": "Image2Image",
        "peekOfCode": "def main(opt):\n    if opt.mode == 'simple':\n        char_list = '@%#*+=-:. '\n    else:\n        char_list = '$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1{}[]?-_+~<>i!lI;:,\\\"^`\\'. '\n    if opt.background == 'white':\n        bg_code = 255\n    else:\n        bg_code = 0\n    num_cols = opt.column",
        "detail": "Image2Image",
        "documentation": {}
    },
    {
        "label": "Banner",
        "kind": 2,
        "importPath": "Image2Text",
        "description": "Image2Text",
        "peekOfCode": "def Banner():\n    print(\n        f'{Fore.YELLOW}  _______  _______  _______  ___   __   __  _______  _______  _______  {Fore.RED}       {Fore.BLUE}    ___   __   __  _______  _______  _______  _______  _______  _______  __   __  _______ '\n    )\n    print(\n        f'{Fore.YELLOW} |   _   ||       ||       ||   | |  |_|  ||   _   ||       ||       | {Fore.RED}       {Fore.BLUE}   |   | |  |_|  ||   _   ||       ||       ||       ||       ||       ||  |_|  ||       |'\n    )\n    print(\n        f'{Fore.YELLOW} |  |_|  ||  _____||       ||   | |       ||  |_|  ||    ___||    ___| {Fore.RED}  ____ {Fore.BLUE}   |   | |       ||  |_|  ||    ___||    ___||____   ||_     _||    ___||       ||_     _|'\n    )",
        "detail": "Image2Text",
        "documentation": {}
    },
    {
        "label": "GetArgs",
        "kind": 2,
        "importPath": "Image2Text",
        "description": "Image2Text",
        "peekOfCode": "def GetArgs():\n    Banner()\n    parser = argparse.ArgumentParser('ASCImage')\n    parser.add_argument('--input',\n                        type=str,\n                        default='Data/Input.jpg',\n                        help='Path to input image')\n    parser.add_argument('--output',\n                        type=str,\n                        default='Data/Output.txt',",
        "detail": "Image2Text",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "Image2Text",
        "description": "Image2Text",
        "peekOfCode": "def main(opt):\n    if opt.mode == 'simple':\n        char_list = '@%#*+=-:. '\n    else:\n        char_list = '$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1{}[]?-_+~<>i!lI;:,\\\"^`\\'. '\n    num_cols = opt.column\n    num_chars = len(char_list)\n    image = cv2.imread(opt.input)\n    try:\n        image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)",
        "detail": "Image2Text",
        "documentation": {}
    }
]